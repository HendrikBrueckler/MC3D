diff --git a/src/OpenVolumeMesh/Core/TopologyKernel.cc b/src/OpenVolumeMesh/Core/TopologyKernel.cc
index 1842926..9e89c00 100644
--- a/src/OpenVolumeMesh/Core/TopologyKernel.cc
+++ b/src/OpenVolumeMesh/Core/TopologyKernel.cc
@@ -341,7 +341,7 @@ void TopologyKernel::reorder_incident_halffaces(const EdgeHandle& _eh) {
                  while(cur_hf != InvalidHalfFaceHandle) {
 
                      cur_hf = opposite_halfface_handle(cur_hf);
-                     cur_hf = adjacent_halfface_in_cell(cur_hf, cur_he);
+                     cur_hf = adjacent_halfface_in_cell(cur_hf, opposite_halfedge_handle(cur_he));
 
                      if(cur_hf == start_hf) break;
 
@@ -2310,7 +2310,7 @@ TopologyKernel::adjacent_halfface_in_cell(const HalfFaceHandle& _halfFaceHandle,
         for(std::vector<HalfEdgeHandle>::const_iterator he_it = hf.halfedges().begin();
             he_it != hf.halfedges().end(); ++he_it) {
 
-            if(edge_handle(*he_it) == edge_handle(_halfEdgeHandle)) {
+            if(opposite_halfedge_handle(*he_it) == _halfEdgeHandle && *hf_it != opposite_halfface_handle(_halfFaceHandle)) {
                 found = true;
                 idx = *hf_it;
             }
diff --git a/src/OpenVolumeMesh/Mesh/HexahedralMeshTopologyKernel.hh b/src/OpenVolumeMesh/Mesh/HexahedralMeshTopologyKernel.hh
index a8b2f33..258fdd3 100644
--- a/src/OpenVolumeMesh/Mesh/HexahedralMeshTopologyKernel.hh
+++ b/src/OpenVolumeMesh/Mesh/HexahedralMeshTopologyKernel.hh
@@ -307,9 +307,7 @@ public:
             if(n_hf == TopologyKernel::InvalidHalfFaceHandle) break;
             n_hf = TopologyKernel::opposite_halfface_handle(n_hf);
             if(n_hf == TopologyKernel::InvalidHalfFaceHandle) break;
-            HalfEdgeHandle o_he = TopologyKernel::opposite_halfedge_handle(n_he);
-            if(o_he == TopologyKernel::InvalidHalfEdgeHandle) break;
-            n_hf = TopologyKernel::adjacent_halfface_in_cell(n_hf, o_he);
+            n_hf = TopologyKernel::adjacent_halfface_in_cell(n_hf, n_he);
             if(n_hf == TopologyKernel::InvalidHalfFaceHandle) break;
             else return n_hf;
         }
@@ -323,9 +321,7 @@ public:
             if(n_hf == TopologyKernel::InvalidHalfFaceHandle) break;
             n_hf = TopologyKernel::opposite_halfface_handle(n_hf);
             if(n_hf == TopologyKernel::InvalidHalfFaceHandle) break;
-            HalfEdgeHandle o_he = TopologyKernel::opposite_halfedge_handle(n_he);
-            if(o_he == TopologyKernel::InvalidHalfEdgeHandle) break;
-            n_hf = TopologyKernel::adjacent_halfface_in_cell(n_hf, o_he);
+            n_hf = TopologyKernel::adjacent_halfface_in_cell(n_hf, n_he);
             if(n_hf == TopologyKernel::InvalidHalfFaceHandle) break;
             else return TopologyKernel::opposite_halfface_handle(n_hf);
         }
